{
  "eval": {
    "expression": {
      "type": "unit"
    },
    "type": "eval"
  },
  "statements": [
    {
      "mutability": "let",
      "initial": {
        "values": [
          {
            "value": "value",
            "key": {
              "ident": "some_key",
              "type": "identifier"
            }
          }
        ],
        "type": "dictioanry"
      },
      "name": "dictionary",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": {
        "expr": {
          "expr": {
            "expr": {
              "expr": {
                "expr": {
                  "expr": {
                    "expr": {
                      "expr": {
                        "expr": {
                          "expr": {
                            "expr": {
                              "expr": {
                                "expr": 2,
                                "op": "-"
                              },
                              "op": "-"
                            },
                            "op": "-"
                          },
                          "op": "-"
                        },
                        "op": "-"
                      },
                      "op": "-"
                    },
                    "op": "-"
                  },
                  "op": "-"
                },
                "op": "-"
              },
              "op": "-"
            },
            "op": "-"
          },
          "op": "-"
        },
        "op": "-"
      },
      "name": "unary_moment",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": {
        "type": "nil"
      },
      "name": "b",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": {
        "elements": [
          10,
          42,
          5,
          3
        ],
        "type": "array"
      },
      "name": "values",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": {
        "eval": {
          "expression": {
            "rhs": {
              "ident": "x",
              "type": "identifier"
            },
            "lhs": {
              "ident": "x",
              "type": "identifier"
            },
            "op": "*"
          },
          "type": "eval"
        },
        "statements": [],
        "type": "scope"
      },
      "name": "a",
      "type": "declvar"
    },
    {
      "eval": {
        "expression": {
          "type": "unit"
        },
        "type": "eval"
      },
      "statements": [
        {
          "else": {
            "args": [
              "huh"
            ],
            "function": {
              "ident": "log",
              "type": "identifier"
            },
            "type": "funcall"
          },
          "then": {
            "args": [
              "Huh"
            ],
            "function": {
              "ident": "log",
              "type": "identifier"
            },
            "type": "funcall"
          },
          "condition": {
            "ident": "true",
            "type": "identifier"
          },
          "type": "if"
        },
        {
          "mutability": "let",
          "initial": 0,
          "name": "number",
          "type": "declvar"
        },
        {
          "args": [
            {
              "else": {
                "eval": {
                  "expression": "false",
                  "type": "eval"
                },
                "statements": [],
                "type": "scope"
              },
              "then": {
                "eval": {
                  "expression": "true",
                  "type": "eval"
                },
                "statements": [],
                "type": "scope"
              },
              "condition": {
                "rhs": 1,
                "lhs": {
                  "ident": "number",
                  "type": "identifier"
                },
                "op": "=="
              },
              "type": "if"
            }
          ],
          "function": {
            "ident": "print",
            "type": "identifier"
          },
          "type": "funcall"
        }
      ],
      "type": "scope"
    },
    {
      "mutability": "let",
      "initial": 0,
      "name": "bruh",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": 0,
      "name": "huh",
      "type": "declvar"
    }
  ],
  "type": "scope"
}