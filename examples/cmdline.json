{
  "eval": {
    "expression": {
      "type": "unit"
    },
    "type": "eval"
  },
  "statements": [
    {
      "mutability": "let",
      "initial": {
        "type": "nil"
      },
      "name": "b",
      "type": "declvar"
    },
    {
      "mutability": "let",
      "initial": {
        "eval": {
          "expression": {
            "rhs": {
              "ident": "x",
              "type": "identifier"
            },
            "lhs": {
              "ident": "x",
              "type": "identifier"
            },
            "op": "*"
          },
          "type": "eval"
        },
        "statements": [],
        "type": "scope"
      },
      "name": "a",
      "type": "declvar"
    },
    {
      "eval": {
        "expression": {
          "type": "unit"
        },
        "type": "eval"
      },
      "statements": [
        {
          "mutability": "let",
          "initial": 0,
          "name": "number",
          "type": "declvar"
        },
        {
          "args": [
            {
              "else": {
                "eval": {
                  "expression": "false",
                  "type": "eval"
                },
                "statements": [],
                "type": "scope"
              },
              "then": {
                "eval": {
                  "expression": "true",
                  "type": "eval"
                },
                "statements": [],
                "type": "scope"
              },
              "condition": {
                "rhs": 1,
                "lhs": {
                  "ident": "number",
                  "type": "identifier"
                },
                "op": "=="
              },
              "type": "if"
            }
          ],
          "function": {
            "ident": "print",
            "type": "identifier"
          },
          "type": "funcall"
        }
      ],
      "type": "scope"
    }
  ],
  "type": "scope"
}